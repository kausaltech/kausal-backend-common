{
	// Place your kausal-watch workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"TypeVar definition": {
		"scope": "python",
		"prefix": "tv",
		"body": [
			"_${1:Name} = TypeVar('_${1:Name}', bound=$0)",
		]
	},
	"Create manager for custom queryset": {
		"scope": "python",
		"prefix": "mgr",
		"body": [
			"_${1:ModelName}Manager = models.Manager.from_queryset(${1:ModelName}QuerySet)",
    	"class ${1:ModelName}Manager(ModelManager['${1}', ${1}QuerySet], _${1:ModelName}Manager): ...",
			"del _${1:ModelName}Manager",
		]
	},
	"Create Graphene resolver method": {
		"scope": "python",
		"prefix": "graphene-resolver",
		"body": [
			"\t@staticmethod",
			"\tdef resolve_${1:field}(root: ${2:Root}, info: GQLInfo):",
			"\t\t$0pass\n"
		]
	}


}
