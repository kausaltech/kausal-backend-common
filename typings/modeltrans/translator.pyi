from collections.abc import Generator
from typing import Any, Iterable

from django.db.models import Model
from modeltrans.conf import get_available_languages as get_available_languages, get_default_language as get_default_language

from .fields import TranslationField as TranslationField
from .manager import MultilingualManager as MultilingualManager

def get_i18n_field(model: Model | type[Model]) -> TranslationField: ...
def get_translated_models(app_name) -> Generator[type[Model], Any, None]: ...
def get_i18n_field_param(model: type[Model], i18n_field: TranslationField, param_name: str) -> Any: ...
def translate_model(model) -> None: ...
def check_languages(languages: Iterable[str], model: type[Model]) -> None: ...
def validate(model: type[Model]) -> None: ...
def raise_if_field_exists(model: type[Model], field_name: str) -> None: ...
def add_virtual_fields(model: type[Model], default_language_field, fields, required_languages) -> None: ...
def has_custom_queryset(manager): ...
def add_manager(model): ...
def patch_constructor(model) -> None: ...
def translate_meta_ordering(model) -> None: ...
