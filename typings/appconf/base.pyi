from .utils import import_attribute as import_attribute
from _typeshed import Incomplete

class AppConfOptions:
    prefix: Incomplete
    holder_path: Incomplete
    holder: Incomplete
    proxy: Incomplete
    required: Incomplete
    configured_data: Incomplete
    def __init__(self, meta, prefix: Incomplete | None = None) -> None: ...
    def prefixed_name(self, name): ...
    names: Incomplete
    defaults: Incomplete
    def contribute_to_class(self, cls, name) -> None: ...

class AppConfMetaClass(type):
    def __new__(cls, name, bases, attrs): ...
    def add_to_class(cls, name, value) -> None: ...

class AppConf(metaclass=AppConfMetaClass):
    def __init__(self, **kwargs) -> None: ...
    def __dir__(self): ...
    @property
    def configured_data(self): ...
    def __getattr__(self, name): ...
    def __setattr__(self, name, value) -> None: ...
    def configure(self): ...
