# ruff: noqa: FBT001, FBT002
from typing import Any, Self, Sequence

from django.db import models

from .fields import ParentalKey

def get_field_value(field, model): ...
def get_serializable_data_for_fields(model): ...
def model_from_serializable_data(model, data, check_fks: bool = True, strict_fks: bool = False): ...
def get_all_child_relations(model): ...
def get_all_child_m2m_relations(model): ...


class ClusterableModel(models.Model):
    def serializable_data(self) -> dict[str, Any]: ...
    def to_json(self) -> str: ...
    @classmethod
    def from_serializable_data(cls, data: dict[str, Any], check_fks: bool = True, strict_fks: bool = False) -> Self: ...
    @classmethod
    def from_json(cls, json_data: str, check_fks: bool = True, strict_fks: bool = False) -> Self: ...
    def copy_child_relation(
        self, child_relation: str | ParentalKey, target: Self, commit: bool = False, append: bool = False,
    ): ...
    def copy_all_child_relations(
        self, target: Self, exclude: Sequence[str] | None = None, commit: bool = False, append: bool = False,
    ): ...
    def copy_cluster(self, exclude_fields: Sequence[str] | None = None): ...
