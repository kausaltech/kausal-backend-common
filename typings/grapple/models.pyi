# ruff: noqa: N802
from typing import Callable

from django.db.models.base import Model
from graphene.types.base import BaseType
from graphene.types.structures import UnmountedType

type GrapheneType = BaseType | UnmountedType
type GrapheneFieldType = GrapheneType | Callable[[], GrapheneType] | Callable[[], type[BaseType]]

class GraphQLField:
    field_name: str
    field_type: GrapheneFieldType | str | None
    field_source: str | None
    description: str | None
    deprecation_reason: str | None

    def __init__(
        self,
        field_name: str,
        field_type: GrapheneFieldType | str | None = None,
        *,
        required: bool | None = None,
        **kwargs,
    ) -> None: ...

def GraphQLString(field_name: str, **kwargs): ...
def GraphQLFloat(field_name: str, **kwargs): ...
def GraphQLInt(field_name: str, **kwargs): ...
def GraphQLBoolean(field_name: str, **kwargs): ...
def GraphQLSnippet(field_name: str, snippet_model: str, **kwargs): ...
def GraphQLForeignKey(field_name, content_type: str | type[Model], **kwargs): ...
def GraphQLStreamfield(field_name: str, **kwargs): ...
def GraphQLRichText(field_name: str, **kwargs): ...
def GraphQLImage(field_name: str, **kwargs): ...
def GraphQLDocument(field_name: str, **kwargs): ...
def GraphQLPage(field_name: str, **kwargs): ...
def GraphQLCollection(
    nested_type,
    field_name,
    *args,
    is_queryset: bool = False,
    is_paginated_queryset: bool = False,
    required: bool = False,
    description=None,
    deprecation_reason=None,
    item_required: bool = False,
    **kwargs,
): ...
def GraphQLEmbed(field_name: str, **kwargs): ...
def GraphQLTag(field_name: str, **kwargs): ...
def GraphQLMedia(field_name: str, **kwargs): ...
