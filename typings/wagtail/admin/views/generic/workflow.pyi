from _typeshed import Incomplete
from django.views import View
from wagtail.admin import messages as messages
from wagtail.admin.modal_workflow import render_modal_workflow as render_modal_workflow
from wagtail.admin.utils import (
    get_latest_str as get_latest_str,
    get_valid_next_url_from_request as get_valid_next_url_from_request,
)
from wagtail.admin.views.generic.base import BaseObjectMixin as BaseObjectMixin
from wagtail.models import Task as Task, TaskState as TaskState, WorkflowState as WorkflowState

class BaseWorkflowFormView(BaseObjectMixin, View):
    redirect_url_name: Incomplete
    submit_url_name: Incomplete
    template_name: str
    action_name: Incomplete
    task_state_id: Incomplete
    redirect_url: Incomplete
    task_state: Incomplete
    task: Incomplete
    form_class: Incomplete
    def setup(self, request, *args, action_name, task_state_id, **kwargs) -> None: ...
    def get_redirect_url(self): ...
    def get_task_state(self): ...
    def get_task(self): ...
    def get_form_class(self): ...
    def add_not_in_moderation_error(self) -> None: ...
    action_verbose_name: str
    action_modal: bool
    def check_action(self) -> None: ...
    def dispatch(self, request, *args, **kwargs): ...
    def get(self, request, *args, **kwargs): ...
    def get_submit_url(self): ...
    def get_context_data(self, **kwargs): ...
    def render_modal_form(self, request, form): ...
    def render_modal_json(self, request, json_data): ...

class WorkflowAction(BaseWorkflowFormView):
    redirect_url: Incomplete
    def post(self, request, *args, **kwargs): ...

class CollectWorkflowActionData(BaseWorkflowFormView):
    def post(self, request, *args, **kwargs): ...

class ConfirmWorkflowCancellation(BaseObjectMixin, View):
    template_name: str
    workflow_state: Incomplete
    def setup(self, request, *args, **kwargs) -> None: ...
    def dispatch(self, request, *args, **kwargs): ...
    def get_context_data(self, **kwargs): ...

class PreviewRevisionForTask(BaseObjectMixin, View):
    task_id: Incomplete
    task: Incomplete
    task_state: Incomplete
    def setup(self, request, *args, task_id, **kwargs) -> None: ...
    def get_task(self): ...
    def get_task_state(self): ...
    def add_error_message(self) -> None: ...
    def get(self, request, *args, **kwargs): ...
