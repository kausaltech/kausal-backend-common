from _typeshed import Incomplete
from django.forms import widgets
from django.utils.functional import cached_property as cached_property
from wagtail.admin.admin_url_finder import AdminURLFinder as AdminURLFinder
from wagtail.admin.staticfiles import versioned_static as versioned_static
from wagtail.coreutils import resolve_model_string as resolve_model_string
from wagtail.models import Page as Page
from wagtail.telepath import register as register
from wagtail.widget_adapters import WidgetAdapter as WidgetAdapter

class BaseChooser(widgets.Input):
    choose_one_text: Incomplete
    choose_another_text: Incomplete
    clear_choice_text: Incomplete
    link_to_chosen_text: Incomplete
    show_edit_link: bool
    show_clear_link: bool
    template_name: str
    display_title_key: str
    icon: Incomplete
    classname: Incomplete
    model: Incomplete
    js_constructor: str
    linked_fields: Incomplete
    input_type: str
    is_hidden: bool
    def __init__(self, **kwargs) -> None: ...
    @cached_property
    def model_class(self): ...
    def value_from_datadict(self, data, files, name): ...
    def get_hidden_input_context(self, name, value, attrs): ...
    def render_hidden_input(self, name, value, attrs): ...
    def get_chooser_modal_url(self): ...
    def get_context(self, name, value_data, attrs): ...
    def render_html(self, name, value_data, attrs): ...
    def get_instance(self, value): ...
    def get_display_title(self, instance): ...
    def get_value_data_from_instance(self, instance): ...
    def get_value_data(self, value): ...
    def render(self, name, value, attrs: Incomplete | None = None, renderer: Incomplete | None = None): ...
    @property
    def base_js_init_options(self): ...
    def get_js_init_options(self, id_, name, value_data): ...
    def render_js_init(self, id_, name, value_data): ...
    @cached_property
    def media(self): ...

class BaseChooserAdapter(WidgetAdapter):
    js_constructor: str
    def js_args(self, widget): ...
    @cached_property
    def media(self): ...

class AdminPageChooser(BaseChooser):
    choose_one_text: Incomplete
    choose_another_text: Incomplete
    link_to_chosen_text: Incomplete
    display_title_key: str
    chooser_modal_url_name: str
    icon: str
    classname: str
    js_constructor: str
    user_perms: Incomplete
    target_models: Incomplete
    model: Incomplete
    can_choose_root: Incomplete
    def __init__(self, target_models: Incomplete | None = None, can_choose_root: bool = False, user_perms: Incomplete | None = None, **kwargs) -> None: ...
    @property
    def model_names(self): ...
    @property
    def base_js_init_options(self): ...
    def get_instance(self, value): ...
    def get_display_title(self, instance): ...
    def get_value_data_from_instance(self, instance): ...
    def get_js_init_options(self, id_, name, value_data): ...
    @property
    def media(self): ...

class PageChooserAdapter(BaseChooserAdapter):
    js_constructor: str
    @cached_property
    def media(self): ...

class AdminPageMoveChooser(AdminPageChooser):
    pages_to_move: Incomplete
    def __init__(self, target_models: Incomplete | None = None, can_choose_root: bool = False, user_perms: Incomplete | None = None, **kwargs) -> None: ...
    @property
    def base_js_init_options(self): ...
