# Generated by Django 5.1.4 on 2025-02-27 13:58

import django.db.models.deletion
import modeltrans.fields
import uuid
from django.db import migrations, models


def create_default_metrics(apps, schema_editor):
    DatasetSchema = apps.get_model('datasets', 'DatasetSchema')
    DatasetMetric = apps.get_model('datasets', 'DatasetMetric')
    DataPoint = apps.get_model('datasets', 'DataPoint')

    # Create a default metric for each schema
    for schema in DatasetSchema.objects.all():
        # Create default metric using schema's unit
        default_metric = DatasetMetric.objects.create(
            schema=schema,
            label='Default',
            unit=schema.unit,
            order=0
        )

        # Update all datapoints for this schema to use the default metric
        for dataset in schema.datasets.all():
            DataPoint.objects.filter(dataset=dataset).update(metric=default_metric)


def remove_default_metrics(apps, schema_editor):
    # This is a reverse operation that will be called during migration rollback
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('datasets', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('label', models.CharField(max_length=100, verbose_name='label')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('unit', models.CharField(blank=True, max_length=50, verbose_name='unit')),
                ('i18n', modeltrans.fields.TranslationField(fields=('label', 'unit'), required_languages=(), virtual_fields=True)),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='datasets.datasetschema')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        # First add the field as nullable
        migrations.AddField(
            model_name='datapoint',
            name='metric',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='data_points', to='datasets.datasetmetric', verbose_name='metric'),
        ),
        # Run data migration to create default metrics and update datapoints
        migrations.RunPython(
            create_default_metrics,
            remove_default_metrics,
        ),
        # Then make it non-nullable
        migrations.AlterField(
            model_name='datapoint',
            name='metric',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='data_points', to='datasets.datasetmetric', verbose_name='metric'),
        ),
    ]
